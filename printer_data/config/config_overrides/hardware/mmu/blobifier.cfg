##########################################################################################
# Park the nozzle on the tray to prevent oozing during filament swaps. Place this 
# extension in the pre-unload extension in mmu_macro_vars.cfg:
#   variable_user_pre_unload_extension: "BLOBIFIER_PARK"
#
[gcode_macro BLOBIFIER_PARK]
variable_restore_z: 0
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set pos = printer.gcode_move.gcode_position %}
  {% set pos_max = printer.toolhead.axis_maximum %}
  {% set position_y = pos_max.y %}

  SET_GCODE_VARIABLE MACRO=BLOBIFIER_PARK VARIABLE=restore_z VALUE={pos.z}

  SAVE_GCODE_STATE NAME=blobifier_park_state
  
  {% if "xy" not in printer.toolhead.homed_axes %}
    RESPOND MSG="Automatically homing XY"
    G28 X Y
  {% endif %}
  
  {% if "z" not in printer.toolhead.homed_axes %}
    RESPOND MSG="Automatically homing Z"
    G28 Z
  {% endif %}
  
  {% if printer.quad_gantry_level and printer.quad_gantry_level.applied == False %}
    RESPOND MSG="Automatically QGL"
    quad_gantry_level
    G28 Z
  {% endif %}

  G90

  G1 E-{bl.retract_before_park} F{bl.retract_speed}
  G1 X{bl.purge_x} Y{position_y} F{bl.travel_spd_xy}
  G1 Z{bl.tray_top} F{bl.travel_spd_z}
  
  RESTORE_GCODE_STATE NAME=blobifier_park_state

##########################################################################################
# Retract or extend the tray 
# POS=[in|out] Retractor extend the tray
#
[gcode_macro BLOBIFIER_SERVO]
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set pos = params.POS %}
  
  {% if pos == "in" %}
    _BLOBIFIER_SERVO POS=in
  {% elif pos == "out" %}
    _BLOBIFIER_SERVO POS=out
  {% else %}
    {action_respond_info("BLOBIFIER: provide POS=[in|out]")}
  {% endif %}

##########################################################################################
# Retract or extend the tray 
# POS=[in|out] The position to set the tray servo to
#
[gcode_macro _BLOBIFIER_SERVO]
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set pos = params.POS %}

  SET_SERVO SERVO=blobifier ANGLE={bl.tray_angle_in if pos == "in" else bl.tray_angle_out} DURATION={bl.servo_duration}
  {action_respond_info("Blobifier tray " + pos)}
  G4 P{bl.servo_idle_time * 1000}
