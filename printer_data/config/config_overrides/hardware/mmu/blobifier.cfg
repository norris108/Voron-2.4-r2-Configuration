##########################################################################################
# Retract or extend the tray 
# POS=[in|out] Retractor extend the tray
#
[gcode_macro BLOBIFIER_SERVO]
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set pos = params.POS %}
  
  {% if pos == "in" %}
    _BLOBIFIER_SERVO POS=in
  {% elif pos == "out" %}
    _BLOBIFIER_SERVO POS=out
  {% else %}
    RESPOND TYPE=error MSG="BLOBIFIER: provide POS=[in|out]"
  {% endif %}

##########################################################################################
# Retract or extend the tray 
# POS=[in|out] The position to set the tray servo to
#
[gcode_macro _BLOBIFIER_SERVO]
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set pos = params.POS %}

  SET_SERVO SERVO=blobifier ANGLE={bl.tray_angle_in if pos == "in" else bl.tray_angle_out} DURATION={bl.servo_duration}
  RESPOND MSG="Blobifier tray {pos}"
  G4 P{bl.servo_idle_time * 1000}

[gcode_macro BLOBIFIER_TEST_SERVO]
gcode:
  {% for i in range(0, 10) %}
    BLOBIFIER_SERVO POS=in
    # G4 P500
    BLOBIFIER_SERVO POS=out
    # G4 P500
  {% endfor %}

##########################################################################################
# Shake the blob bucket to disperse the blobs
#
[gcode_macro BLOBIFIER_SHAKE_BUCKET]
gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  {% set count = printer['gcode_macro _BLOBIFIER_COUNT'] %}
  {% set original_accel = printer.toolhead.max_accel %}
  {% set original_minimum_cruise_ratio = printer.toolhead.minimum_cruise_ratio %}
  
  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_raise_error("BLOBIFIER: Not homed. Home xyz first")}
  {% endif %}
  
  SET_GCODE_VARIABLE MACRO=_BLOBIFIER_COUNT VARIABLE=last_shake VALUE={count.current_blobs}
  _BLOBIFIER_SAVE_STATE
  SAVE_GCODE_STATE NAME=shake_bucket
  
  M400
  M117 (^_^)

  G90
  {% set shakes = params.SHAKES|default(10)|int %}
  {% set position_y = bl.shaker_y %}
  
  # move to save y if not already there
  {% if printer.toolhead.position.y != position_y %}
    G1 X{bl.brush_start} Y{position_y} F{bl.travel_spd_xy}
  {% endif %}

  # move up a bit to prevent oozing on base
  G1 Z2 F{bl.travel_spd_z}
  # slide into the slot
  G1 X{bl.shaker_x} F{bl.travel_spd_xy}

  M400
  M117 (+(+_+)+)

  SET_VELOCITY_LIMIT ACCEL={bl.shake_accel} MINIMUM_CRUISE_RATIO=0.1
  
  # Shake away!
  {% for shake in range(1, shakes) %}
     G1 Y{position_y - bl.shaker_y_distance}
     G1 Y{position_y}
  {% endfor %}

  SET_VELOCITY_LIMIT ACCEL={original_accel} MINIMUM_CRUISE_RATIO={original_minimum_cruise_ratio}
  # move out of slot
  G1 X{bl.purge_x}

  M400
  M117 (X_x)
  
  RESTORE_GCODE_STATE NAME=shake_bucket  