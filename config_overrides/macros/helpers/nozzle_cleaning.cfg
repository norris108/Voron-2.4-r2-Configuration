[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES"].purge_and_brush_enabled %}
    {% set purgeclean_servo_enabled = printer["gcode_macro _USER_VARIABLES"].purgeclean_servo_enabled %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set brush_clean_accel = printer["gcode_macro _USER_VARIABLES"].brush_clean_accel %}
    {% set brush_over_y_axis = printer["gcode_macro _USER_VARIABLES"].brush_over_y_axis %}
    {% set brush_offset = printer["gcode_macro _USER_VARIABLES"].brush_center_offset|default(0)|float %}
    {% set brush_size = printer["gcode_macro _USER_VARIABLES"].brush_width_x|default(40)|float %}
    {% set brushes = printer["gcode_macro _USER_VARIABLES"].brushes|default(6)|int %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set brush_iterations = printer["gcode_macro _USER_VARIABLES"].brush_iterations|default(1)|int %}
    {% set brush_width_y = 10 %}

    {% if purge_and_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES"].brush_clean_speed * 60 %}

        {% set Bx, By, Bz = printer["gcode_macro _USER_VARIABLES"].brush_xyz|map('float') %}
        {% set Bx = Bx + brush_offset %}

        {% if status_leds_enabled %}
            STATUS_LEDS COLOR="CLEANING"
        {% endif %}

        {% if verbose %}
            RESPOND MSG="Nozzle cleaning..."
        {% endif %}

        # Set the cleaning acceleration prior to any movement
        {% set saved_accel = printer.toolhead.max_accel %}
        SET_VELOCITY_LIMIT ACCEL={brush_clean_accel}

        # Move to purge zone (left side)
        G90
        _CONDITIONAL_MOVE_TO_PURGE_BUCKET Z_DROP=1

        {% for brush_iteration in range(brush_iterations) %}
            G90
            # Move to center front of the brush
            G1 X{Bx} Y{By - (brush_width_y / 2)} F{St}
            G1 Z{Bz} F{St}
            # Wipe procedure
            G91
            {% if brush_over_y_axis %}
                # Move to the left side of the brush
                {% if brush_offset < 0 %} # brush center biased towards 0
                    G1 X-{ brush_size/2 } F{Sc}
                {% else %}                # brush center biased towards x_max
                    G1 X-{ (brush_size/2) - brush_offset} F{Sc}
                {% endif %}

                # Wipe to the right
                {% for wipe in range(brushes) %}
                    G1 Y+{brush_width_y} X{brush_size / brushes / 2} F{Sc}
                    G1 Y-{brush_width_y} X{brush_size / brushes / 2} F{Sc}
                {% endfor %}

                # Wipe to the left
                {% for wipe in range(brushes) %}
                    G1 Y+{brush_width_y} X-{brush_size / brushes / 2} F{Sc}
                    G1 Y-{brush_width_y} X-{brush_size / brushes / 2} F{Sc}
                {% endfor %}

                # Move to center of the brush
                G90
                G1 X{Bx} Y{By} F{St}
                G1 Z{Bz} F{St}
                G91
            {% endif %}

            # Move to the right side of the brush
            {% if brush_offset < 0 %} # brush center biased towards 0
                G1 X+{ brush_size/2 } F{Sc}
            {% else %}                # brush center biased towards x_max
                G1 X+{ (brush_size/2) - brush_offset} F{Sc}
            {% endif %}

            # Brush procedure
            {% for wipe in range((brushes / 2)|int) %}
                G1 X-{ (brush_size) - brush_offset } F{Sc}
                G1 Y-2 F{Sc}
                G1 X+{ (brush_size) - brush_offset } F{Sc}
                G1 Y-2 F{Sc}
            {% endfor %}

            {% for wipe in range((brushes / 2)|int) %}
                G1 X-{ (brush_size) - brush_offset } F{Sc}
                G1 Y+2 F{Sc}
                G1 X+{ (brush_size) - brush_offset } F{Sc}
                G1 Y+2 F{Sc}
            {% endfor %}
        {% endfor %}

        G90
        # Move to center rear of the brush
        G1 X{Bx} Y{By + (brush_width_y / 2)} F{St}
        G1 Z{Bz} F{St}

        # Reset acceleration values to what it was before
        SET_VELOCITY_LIMIT ACCEL={saved_accel}

        {% if purgeclean_servo_enabled %}
            _SERVO_RETRACT ITEM="clean"
        {% endif %}
    {% endif %}

    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="READY"
    {% endif %}
    